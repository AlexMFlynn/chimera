generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model tasks {
  TaskId      String  @id(map: "Tasks_pkey") @db.Uuid
  Title       String  @db.VarChar(255)
  Description String? @db.VarChar(255)
  Completed   Boolean @default(false)
  CreatedAt   DateTime @default(now()) @db.Timestamp(6)
  UpdatedAt   DateTime @db.Timestamp(6)
  UserId      String  @db.Uuid @map("UserId")
  users       users   @relation(fields: [UserId], references: [UserId], onDelete: NoAction, onUpdate: NoAction, map: "UserId")
}

model users {
  UserId           String            @id @db.Uuid
  FirstName        String            @db.VarChar(100)
  LastName         String            @db.VarChar(100)
  DateOfBirth      DateTime?         @db.Date
  Gender           String?           @db.Char(1)
  users_login_data users_login_data?
  tasks            tasks[]         
}

model users_login_data {
  UserId                  String    @id(map: "user_login_data_pkey") @db.Uuid
  LoginName               String    @db.VarChar(50)
  PasswordHash            String    @db.VarChar(255)
  PasswordSalt            String    @db.VarChar(100)
  HashAlgorithmId         Int
  EmailAdress             String    @db.VarChar(100)
  ConfirmationToken       String?   @db.VarChar(100)
  TokenGenerationTime     DateTime? @db.Timestamp(6)
  EmailValidationStatusId Int
  PasswordRecoveryToken   String?   @db.VarChar(100)
  RecoveryTokenTime       DateTime? @db.Timestamp(6)
  users                   users     @relation(fields: [UserId], references: [UserId], onDelete: NoAction, onUpdate: NoAction, map: "UserId")
}
