generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model tasks {
  taskId      String  @id(map: "Tasks_pkey") @db.Uuid
  title       String  @db.VarChar(255)
  description String? @db.VarChar(255)
  completed   Boolean @default(false)
  createdAt   DateTime @default(now()) @db.Timestamp(6)
  updatedAt   DateTime @db.Timestamp(6)
  userId      String  @db.Uuid @map("UserId")
  users       users   @relation(fields: [userId], references: [userId], onDelete: Cascade, onUpdate: Cascade, map: "UserId")
}

model users {
  userId           String            @id @db.Uuid
  firstName        String            @db.VarChar(100)
  lastName         String            @db.VarChar(100)
  dateOfBirth      DateTime?         @db.Date
  gender           String?           @db.Char(1)
  users_login_data users_login_data?
  tasks            tasks[]         
}

model users_login_data {
  userId                  String    @id(map: "user_login_data_pkey") @db.Uuid
  loginName               String    @db.VarChar(50)
  passwordHash            String    @db.VarChar(255)
  passwordSalt            String    @db.VarChar(100)
  hashAlgorithmId         Int
  emailAdress             String    @db.VarChar(100)
  confirmationToken       String?   @db.VarChar(100)
  tokenGenerationTime     DateTime? @db.Timestamp(6)
  emailValidationStatusId Int
  passwordRecoveryToken   String?   @db.VarChar(100)
  recoveryTokenTime       DateTime? @db.Timestamp(6)
  users                   users     @relation(fields: [userId], references: [userId], onDelete: Cascade, onUpdate: Cascade, map: "userId")
}
